<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABIlJREFUeF7t
        nU9rE0EYhyt4VfEbeBEET152U1NQzG6sFOuhCPXWg0I9iJZeVBAUBEWxQkX0oAePgh/BntRLe1Er6l1a
        bauiJNkk0rjOu85gmn1ts8nM7M7s+4MHQvbPzP6ebLJbSjJAoVAoFAqFQqFQKBQKhUKh5DWVo8X9ge+c
        rPrudMVzrtoIHBscIxwrP+xsJRwZ2l313NtVz1mtlpwwV/w95pvhaHEHryO9hFcPb2ciLlQ893tsornD
        Xal5hTPQCa9Hf+DUZRNZxyeYR1gXvnue16M3geeOsdO1hU8sx0AnZdfnNelJeMzdyT7cfqITIsJKyfkR
        et4uXpf6sM+NG9hEiDZYR7wutQnDcBs7LZfRSRBtuEvQFa9NXYJywcUnQHRS8wYP8NrUpeoXJrDBiTiV
        sjvOa1MX9t54ERucQGD3aLw2dYn+dIANTsSArnht6kJCuoeEZAwSkjFISMYwX8joEfx5QzFaSHP2Tth6
        /yGsjR9Hl6siOHcafV4Gxgpp3LkRhmvfI3RKEeP+evIYXd4vRgppl6FTSue4KqQYJ6Rx/cqGUtpRKQV7
        EQDNRw/R9XvFKCEg4/fKV7QYgQop/5MhaD6YRbfrBWOE1C9NoWVgyJSy2RnZjiwp5pwho6VwfWEBLQND
        hpRuZQhkXH2ZIwTQKKWbt8d2mvfvovtJillCAA1Skspo3LqO7qcXzBMCKJSSpgzATCGAAilpywDMFQJI
        lJIFGYDZQgAJUrIiAzBfCNCLlLHhaNssyQDsEAKAlFcv0RIxWq/fhI2Zm5mSAdgjBBg5lEjK79Vv6PMY
        OmQAdgkBEkrpBl0yAPuEABKl6JQB2CkEkCBFtwzAXiFAH1LSkAHYLQRgUlqL79DSMeCDvnFvBt+XBqwX
        kvQ+A4BLYnGfohurhfQiQ5CWFGuF9CNDkIYUK4XIkCHQLcU6ITJlCHRKsUpIEhlwNdVaXESXYeiSYo2Q
        pDIa1y4nvk/RIcUKIT3JENtnTIrxQvqSIehBSvVEKb4fCRgtRIoMQUIp6/PzSqQYK0SqDEEGpBgpJJGM
        L2vdyRCkLMU4IUll1C9OofvZlBSlGCWkfnlavQxBSlKMERLJYCVjZXTStwwBSHn5Ah0D49ezp/h+EmCO
        EFZwN0KkyRB0eabAOvCfL+g+EmCMEGArKdJlCLaQEslg66DbJsQoIUAkZXklVooyGQKQMvc8Nq5MGYBx
        QoD61OQGKcplCIaLG6TAY5kyACOFAJGUT0v6ZAi4lEgGe4yu0wfGCgGCsxPR1Re2TCnDQ3/BlvWJ0UJs
        hIRkDBKSMUhIxiAhGYOEZAwtQuCrT7HBCQQtXxNbdsfRwYkYWr5IuVke3IcNTsSBrnhtalMpOR+xCRD/
        gI54XepT851JbBLEP6AjXpee0FmyGe5bXpO+NHx3L7uso1/Z6YC9UNegG16T3gR+oVgpuRVsYnkEughK
        Bwd5PekkKA8eZJP53Dm53OE5y9AFryX9VH3nFJvYXGyi9jMHx85ryF7qw4U9efnpVThWftgUCoVCoVAo
        FAqFQqFQKBRKzjIw8AcvsmcuubEAVQAAAABJRU5ErkJggg==
</value>
  </data>
</root>